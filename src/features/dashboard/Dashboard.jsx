import React from "react";

const Dashboard = () => {
  const [budget, setBudget] = React.useState("‡ß®‡ß¶‡ß¶‡ß¶");
  const [categories, setCategories] = React.useState([
    { name: "‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞", amount: "‡ß´‡ß¶‡ß¶" },
    { name: "‡¶¨‡¶ø‡¶≤", amount: "‡ß©‡ß¶‡ß¶" },
    { name: "‡¶∂‡¶™‡¶ø‡¶Ç", amount: "‡ß™‡ß¶‡ß¶" },
  ]);
  const [isModalOpen, setIsModalOpen] = React.useState(false);
  const [newBudget, setNewBudget] = React.useState("");

  // ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‚Üí ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ
  const bnToEnNumber = (str) =>
    str.replace(/[‡ß¶-‡ßØ]/g, (d) => "‡ß¶‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ‡ßØ".indexOf(d));

  // ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‚Üí ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ
  const enToBnNumber = (str) =>
    str.toString().replace(/[0-9]/g, (d) => "‡ß¶‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ‡ßØ"[d]);

  const totalSpent = categories.reduce((acc, category) => {
    return acc + parseInt(bnToEnNumber(category.amount), 10);
  }, 0);

  const totalBudget = parseInt(bnToEnNumber(budget), 10);
  const remainingBudget = totalBudget - totalSpent;
  const budgetPercentage =
    totalBudget > 0 ? ((totalSpent / totalBudget) * 100).toFixed(2) : 0;

  const handleBudgetSubmit = () => {
    if (newBudget) {
      const converted = bnToEnNumber(newBudget);
      setBudget(converted);
      setIsModalOpen(false);
      setNewBudget("");
    }
  };

  return (
    <div className="p-6 bg-gradient-to-br from-gray-100 to-gray-200 min-h-screen">
      <h1 className="text-3xl font-bold text-gray-800 mb-8">üìä ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°</h1>

      {/* ‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶∏‡¶æ‡¶∞‡¶æ‡¶Ç‡¶∂ */}
      <section className="bg-white rounded-2xl shadow-md p-6 mb-6">
        <h2 className="text-xl font-semibold text-gray-800 mb-4">
          üóìÔ∏è ‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶∏‡¶æ‡¶∞‡¶æ‡¶Ç‡¶∂
        </h2>
        <p className="text-gray-600">
          ‡¶Ü‡¶™‡¶®‡¶ø ‡¶Ü‡¶ú <strong>{enToBnNumber(categories.length)}</strong>‡¶ü‡¶ø
          ‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ó‡¶∞‡¶ø‡¶§‡ßá ‡¶Æ‡ßã‡¶ü <strong>‡ß≥ {enToBnNumber(totalSpent)}</strong> ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶ñ‡¶∞‡¶ö
          ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®‡•§
        </p>
        <details className="mt-4">
          <summary className="text-blue-600 font-medium cursor-pointer">
            üîç ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®
          </summary>
          <ul className="list-disc pl-6 mt-2 space-y-1 text-gray-700">
            {categories.map((category, index) => (
              <li key={index}>
                {category.name}:{" "}
                <span className="font-medium">‡ß≥{category.amount}</span>
              </li>
            ))}
          </ul>
        </details>
      </section>

      {/* ‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï ‡¶¨‡¶æ‡¶ú‡ßá‡¶ü ‡¶™‡¶∞‡ßç‡¶Ø‡¶æ‡¶≤‡ßã‡¶ö‡¶®‡¶æ */}
      <section className="bg-white rounded-2xl shadow-md p-6 mb-6">
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-semibold text-gray-800">
            üìÖ ‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï ‡¶¨‡¶æ‡¶ú‡ßá‡¶ü ‡¶™‡¶∞‡ßç‡¶Ø‡¶æ‡¶≤‡ßã‡¶ö‡¶®‡¶æ
          </h2>
          <button
            onClick={() => setIsModalOpen(true)}
            className="text-sm text-blue-600 hover:underline"
          >
            ‚ûï ‡¶¨‡¶æ‡¶ú‡ßá‡¶ü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
          </button>
        </div>

        <div className="flex justify-between items-center text-gray-700">
          <span>‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶¨‡¶æ‡¶ú‡ßá‡¶ü:</span>
          <span className="font-semibold text-blue-600">
            ‡ß≥ {enToBnNumber(totalSpent)} / ‡ß≥ {enToBnNumber(budget)}
          </span>
        </div>

        <div className="w-full bg-gray-200 rounded-full h-3 mt-3 overflow-hidden">
          <div
            className="bg-blue-500 h-3 transition-all duration-500"
            style={{ width: `${budgetPercentage}%` }}
          ></div>
        </div>
       <div className="flex justify-between items-center mt-2 text-gray-700">
       <h1 className="text-sm text-red-500">‡¶Ö‡¶¨‡¶∂‡¶ø‡¶∑‡ßç‡¶ü ‡¶¨‡¶æ‡¶ú‡ßá‡¶ü‡¶É ‡ß≥ {enToBnNumber(remainingBudget)}</h1>
       <p className="text-right text-sm mt-1 text-gray-500">
          {enToBnNumber(budgetPercentage)}% ‡¶ñ‡¶∞‡¶ö ‡¶π‡ßü‡ßá‡¶õ‡ßá
        </p>
       </div>
      </section>

      {/* Modal */}
      {isModalOpen && (
        <div className="fixed inset-0  bg-opacity-30 flex justify-center items-center z-50">
          <div className="bg-amber-50 p-6 rounded-xl shadow-lg w-96">
            <h3 className="text-lg font-semibold mb-4 text-gray-800">
              ‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡¶æ‡¶ú‡ßá‡¶ü ‡¶¶‡¶ø‡¶®
            </h3>
            <input
              type="text"
              placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: ‡ß©‡ß¶‡ß¶‡ß¶"
              value={newBudget}
              onChange={(e) => setNewBudget(e.target.value)}
              className="w-full border border-gray-300 rounded-lg px-4 py-2 mb-4 focus:outline-none focus:ring focus:ring-blue-300"
            />
            <div className="flex justify-end space-x-2">
              <button
                onClick={() => setIsModalOpen(false)}
                className="px-4 py-2 bg-gray-300 rounded-lg hover:bg-gray-400"
              >
                ‡¶¨‡¶æ‡¶§‡¶ø‡¶≤
              </button>
              <button
                onClick={handleBudgetSubmit}
                className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
              >
                ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®
              </button>
            </div>
          </div>
        </div>
      )}

      {/* ‡¶∂‡¶∞‡ßç‡¶ü‡¶ï‡¶æ‡¶ü */}
      <section className="bg-white rounded-2xl shadow-md p-6">
        <h2 className="text-xl font-semibold text-gray-800 mb-4">
          ‚ö° ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶è‡¶ï‡ßç‡¶∏‡ßá‡¶∏ ‡¶∂‡¶∞‡ßç‡¶ü‡¶ï‡¶æ‡¶ü
        </h2>
        <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
          <button className="bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-xl shadow">
            ‚ûï ‡¶ñ‡¶∞‡¶ö ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
          </button>
          <button className="bg-green-600 hover:bg-green-700 text-white py-2 rounded-xl shadow">
            ‚ûï ‡¶Ü‡ßü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
          </button>
          <button className="bg-purple-600 hover:bg-purple-700 text-white py-2 rounded-xl shadow">
            üìà ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®
          </button>
          <button className="bg-yellow-500 hover:bg-yellow-600 text-white py-2 rounded-xl shadow">
            ‚öôÔ∏è ‡¶∏‡ßá‡¶ü‡¶ø‡¶Ç‡¶∏
          </button>
        </div>
      </section>
    </div>
  );
};

export default Dashboard;
